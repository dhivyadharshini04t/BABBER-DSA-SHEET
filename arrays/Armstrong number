//armstrong or not in an number
import java.util.*;
class main 
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
       int n = sc.nextInt();
       int dumy =n;
       int res =0;
       int count = String.valueOf(dumy).length();    // loosy convertion error may come so convert the integer to string and find length and raise the power.
       while(n!=0)
       {
           int digit = n%10;
           res +=Math.pow(digit,count);
           n = n/10;
       }
       if(dumy == res)
       {
       System.out.print("armstrong");
       }
       else{
           System.out.print("not an armstrong");
       }
    }
}
//153 is an armstrong number
//143 is not an armstrong number


// The key point is that the value of n is modified inside the while loop as it iterates through the digits of the number. 
// After the loop, n becomes 0, so using originalN for the comparison ensures that you are checking whether the original number is an Armstrong number or not.
// If you used n in the comparison, it would always be false because n is 0 at that point.
