/* Target Practice
Drona normally trains his disciples using a board that consists of concentric circles. When the student correctly hits the center of the concentric circles, his score is 100. The score gets reduced depending on where the students hit on the board. When the student hits outside the board, his score is 0. Drona will not allow a student to have his food unless he scores 100. Arjuna will always hit the target in his first attempt and he will leave early. Others may take more turns to reach a score of 100.
Can you write a program to determine the number of turns a disciple takes to reach the target score of 'n'?


example 1=>n=100
   4
   60
   40 output be number of turns is 3 after adding 4+60+40 the count gets increased and after adding last 40 only knows sum>n so count as 3
   
example 2=> n =50
               20
               30
               40 output be number of turns is 2 because the count 20+30 itself 50 the while loop gets terminated and counts as only 2*/

import java.util.*;
class main {
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int sum=0;int att=0;int score=0;
      while(sum<n)
        {
             score=sc.nextInt();
            sum+=score;
            att++;
        }
        System.out.print("the number of turns is "+sum);
    }
}
